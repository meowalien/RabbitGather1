version: "3.3"

networks:
  outer:
    external: true
  internal:
    external: false

services:
  traefik:
    container_name: rabbitgather/traefik
    image: traefik:v2.0
    restart: always
    ports:
      - "80:80" # <== http
      - "8080:8080" # <== :8080 is where the dashboard runs on
      - "443:443" # <== https
    volumes:
#      - ./letsencrypt:/letsencrypt # <== Volume for certs (TLS)
      - /var/run/docker.sock:/var/run/docker.sock # <== Volume for docker admin
      - ./traefik/dynamic.yaml:/dynamic.yaml # <== Volume for dynamic conf file, **ref: line 27
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml
      - ./traefik/ssl/__meowalien_com.crt:/__meowalien_com.crt
      - ./traefik/ssl/__meowalien_com.key:/__meowalien_com.key
    networks:
      - outer # <== Placing traefik on the network named web, to access containers on this network
#    labels:
#      #### Labels define the behavior and rules of the traefik proxy for this container ####
#      - "traefik.enable=true" # <== Enable traefik on itself to view dashboard and assign subdomain to view it
#      - "traefik.http.routers.api.rule=Host(`traefik_dashboard.meowalien.com`)" # <== Setting the domain for the dashboard
#      - "traefik.http.routers.api.service=api@internal" # <== Enabling the api to be a service to access

  nginx:
    container_name: rabbitgather/nginx
    image: nginx:1.20.1
    networks:
      - outer
    volumes:
      - ./web:/web
      - ./nginx/conf.d:/etc/nginx/conf.d
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=outer"
      - "traefik.http.services.rabbitgather-web.loadbalancer.server.port=80"
      - "traefik.http.routers.rabbitgather-web.rule=Host(`meowalien.com`)"
      - "traefik.http.routers.rabbitgather-web.tls=true"
      - "traefik.http.routers.rabbitgather-web.entrypoints=https"

  mariadb:
    container_name: rabbitgather/mariadb
    build: ./mariadb
    ports:
      - "3307:3306"
    volumes:
      - ./mariadb/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./mariadb/datadir:/var/lib/mysql
      - ./mariadb/initdb:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: debug
    restart: always
    networks:
      - internal

  neo4j:
    container_name: rabbitgather/neo4j
    image: neo4j:4.3.3-community
    ports:
      - "7687:7687"
    volumes:
      - ./neo4j/data:/data
      - ./neo4j/logs:/logs
      - ./neo4j/import:/var/lib/neo4j/import
      - ./neo4j/plugins:/plugins
    environment:
      NEO4J_AUTH: neo4j/nET@F*MVGreojoisdh0ri9r2eo4j_rwofj
    restart: always
    networks:
      - internal

  article:
    container_name: rabbitgather/article
    build:
      context: ./services/article
      args:
        - IsDebug=TURE
    volumes:
      - ./services/article/config/config_docker.json:/app/config/config.json

