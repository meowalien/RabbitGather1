version: "3.3"

networks:
  outer:
    external: true
  internal:
    external: false

services:
  traefik:
    container_name: rabbitgather-traefik
    networks:
      - outer
    image: traefik:v2.0
    restart: always
    ports:
      - "80:80" # <== http
      - "8080:8080" # <== :8080 is where the dashboard runs on
      - "443:443" # <== https
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # <== Volume for docker admin
      - ./traefik/dynamic.yaml:/dynamic.yaml # <== Volume for dynamic conf file, **ref: line 27
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml
      - ./traefik/ssl/__meowalien_com.crt:/__meowalien_com.crt
      - ./traefik/ssl/__meowalien_com.key:/__meowalien_com.key


  nginx:
    container_name: rabbitgather-nginx
    networks:
      - outer
    depends_on:
      - traefik
    image: nginx:1.20.1
    volumes:
      - ./web:/web
      - ./nginx/conf.d:/etc/nginx/conf.d
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=outer"
      - "traefik.http.services.rabbitgather-web.loadbalancer.server.port=80"
      - "traefik.http.routers.rabbitgather-web.rule=Host(`meowalien.com`)"
      - "traefik.http.routers.rabbitgather-web.tls=true"
      - "traefik.http.routers.rabbitgather-web.entrypoints=https"


  article:
    networks:
      - internal
      - outer
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=outer"
      - "traefik.http.services.rabbitgather-article-restful.loadbalancer.server.port=2001"
      - "traefik.http.routers.rabbitgather-article-restful.rule=Host(`api.meowalien.com`)"
      - "traefik.http.routers.rabbitgather-article-restful.tls=true"
      - "traefik.http.routers.rabbitgather-article-restful.entrypoints=https"
    container_name: rabbitgather-article
    build:
      context: modules/article
    environment:
      DEBUG: "true"
    volumes:
      - ./modules/article/config/config_docker.json:/app/config/config.json
    depends_on:
      - traefik
      - neo4jdb
      - mariadb
      - redisdb


  mariadb:
    networks:
      - internal
    container_name: rabbitgather-mariadb
    build: ./mariadb
    ports:
      - "3306:3306"
    volumes:
      - ./mariadb/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./mariadb/datadir:/var/lib/mysql
      - ./mariadb/initdb:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: 1234
    restart: always


  neo4jdb:
    networks:
      - internal
    container_name: rabbitgather-neo4jdb
    image: neo4j:4.3.3-community
    ports:
      - "7687:7687"
    volumes:
      - ./neo4j/data:/data
      - ./neo4j/logs:/logs
      - ./neo4j/import:/var/lib/neo4j/import
      - ./neo4j/plugins:/plugins
    environment:
      NEO4J_AUTH: neo4j/1234
    restart: always

  redisdb:
    networks:
      - internal
    image: redis:6.2.5
    #    不知為啥就是無法自己讀取，只能手動設定
    command: 'redis-server /usr/local/etc/redis/redis.conf'
    ports:
      - '6379:6379'
    volumes:
      - ./redis/data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
#    environment:
#      REDIS_PASSWORD: 1234
